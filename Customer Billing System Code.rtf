{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs48 \cf2 \expnd0\expndtw0\kerning0
#include<stdio.h>
\fs32 \

\fs48 \'a0#include<conio.h>
\fs32 \

\fs48 \'a0#include<stdlib.h>
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0void input();
\fs32 \

\fs48 \'a0void writefile();
\fs32 \

\fs48 \'a0void search();
\fs32 \

\fs48 \'a0void output();
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0struct date\{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 int month;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 int day;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 int year;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 \};
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0 struct account \{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 int number;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 char name[100];
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 int acct_no;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 float mobile_no;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 char street[100];
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 char city[100];
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 char acct_type;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 float oldbalance;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 float newbalance;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 float payment;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 struct date lastpayment;
\fs32 \

\fs48 \'a0 \}customer;
\fs32 \

\fs48 \'a0 int tl,sl,ts;
\fs32 \

\fs48 \'a0void main()
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 int i,n;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 char ch;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 clrscr();
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 _setcursortype(_NOCURSOR);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\'a0\'a0 CUSTOMER BILLING SYSTEM:\\n\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("===============================\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\\n1:\'a0\'a0\'a0 to add account on list\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("2:\'a0\'a0\'a0 to search customer account\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("3:\'a0\'a0\'a0 exit\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\\n================================\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 do\{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0\'a0 printf("\\nselect what do you want to do?");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0\'a0 ch=getche();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 \}while(ch<='0' || ch>'3');
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 switch(ch)\{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 case '1':
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 clrscr();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printf("\\nhow many customer accounts?");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 scanf("%d",&n);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 for(i=0;i<n;i++)\{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 input();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if(customer.payment>0)
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 customer.acct_type=(customer.payment<0.1*customer.oldbalance)? 'O': 'D';
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 else
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 customer.acct_type=(customer.oldbalance>0)?'D' : 'C';
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 customer.newbalance=customer.oldbalance - customer.payment;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 writefile();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 main();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 case '2':
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 clrscr();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printf("search by what?\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printf("\\n1 --- search by customer number\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printf("2 --- search by customer name\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 search();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ch=getche();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 main();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 case '3':
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 clrscr();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 delay(700);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 textcolor(RED);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 gotoxy(25,25);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 cprintf("\\nA PROJECT BY GIRIKSHIT");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 delay(1500);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 exit(1);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 \}
\fs32 \

\fs48 \'a0\}
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0\'a0 void input()
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 FILE *fp=fopen("bidur.dat","rb");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 fseek (fp,0,SEEK_END);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 tl=ftell(fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 sl=sizeof(customer);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 ts=tl/sl;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 fseek(fp,(ts-1)*sl,SEEK_SET);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 fread(&customer,sizeof(customer),1,fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\\ncustomer no:%d\\n",++customer.number);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 fclose(fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Account number:");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 scanf("%d",&customer.acct_no);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\\n\'a0\'a0\'a0\'a0\'a0\'a0 Name:");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 scanf("%s",customer.name);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\\n\'a0\'a0\'a0\'a0\'a0\'a0 mobile no:");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 scanf("%f",&customer.mobile_no);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Street:");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 scanf("%s",customer.street);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 City:");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 scanf("%s",customer.city);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Previous balance:");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 scanf("%f",&customer.oldbalance);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Current payment:");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 scanf("%f",&customer.payment);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 printf("\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 Payment date(mm/dd/yyyy):");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 scanf("%d/%d/%d",&customer.lastpayment.month,&customer.lastpayment.day,&customer.lastpayment.year);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 return;
\fs32 \

\fs48 \'a0\'a0 \}
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0\'a0 void writefile()
\fs32 \

\fs48 \'a0\'a0 \{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 FILE *fp;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 fp=fopen("bidur.dat","ab");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 fwrite(&customer,sizeof(customer),1,fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 fclose(fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0 return;
\fs32 \

\fs48 \'a0\'a0 \}
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0\'a0 void search()
\fs32 \

\fs48 \'a0\'a0 \{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0char ch;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0char nam[100];
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0int n,i,m=1;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0FILE *fp;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0fp=fopen("bidur.dat","rb");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0do\{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printf("\\nenter your choice:");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ch=getche();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\}while(ch!='1' && ch!='2');
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0switch(ch)\{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 case '1':
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 fseek(fp,0,SEEK_END);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 tl=ftell(fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 sl=sizeof(customer);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 ts=tl/sl;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 do\{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printf("\\nchoose customer number:");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 scanf("%d",&n);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if(n<=0 || n>ts)
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printf("\\nenter correct\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 else\{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 fseek(fp,(n-1)*sl,SEEK_SET);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 fread(&customer,sl,1,fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 output();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printf("\\n\\nagain?(y/n)");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ch=getche();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 \}while(ch=='y');
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 fclose(fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 break;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 case '2':
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 fseek(fp,0,SEEK_END);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 tl=ftell(fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 sl=sizeof(customer);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 ts=tl/sl;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 fseek(fp,(ts-1)*sl,SEEK_SET);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 fread(&customer,sizeof(customer),1,fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 n=customer.number;
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 do\{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printf("\\nenter the name:");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 scanf("%s",nam);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 fseek(fp,0,SEEK_SET);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 for(i=1;i<=n;i++)
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0 fread(&customer,sizeof(customer),1,fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0 if(strcmp(customer.name,nam)==0)
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0 \{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 output();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 m=0;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 break;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0 \}
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \}
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 if(m!=0)
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printf("\\n\\ndoesn't exist\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 printf("\\nanother?(y/n)");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 ch=getche();
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 \}while(ch=='y');
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0 fclose(fp);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 \}
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 return;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\}
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0
\fs32 \

\fs48 \'a0\'a0 void output()
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 printf("\\n\\n\'a0\'a0\'a0 Customer no\'a0\'a0\'a0 :%d\\n",customer.number);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 printf("\'a0\'a0\'a0 Name \'a0 \'a0\'a0\'a0:%s\\n",customer.name);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 printf("\'a0\'a0\'a0 Mobile no\'a0\'a0\'a0\'a0\'a0 :%.f\\n",customer.mobile_no);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 printf("\'a0\'a0\'a0 Account number :%d\\n",customer.acct_no);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 printf("\'a0\'a0\'a0 Street\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 :%s\\n",customer.street);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 printf("\'a0\'a0\'a0 City\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 :%s\\n",customer.city);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 printf("\'a0\'a0\'a0 Old balance\'a0\'a0\'a0 :%.2f\\n",customer.oldbalance);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 printf("\'a0\'a0\'a0 Current payment:%.2f\\n",customer.payment);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 printf("\'a0\'a0\'a0 New balance\'a0\'a0\'a0 :%.2f\\n",customer.newbalance);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 printf("\'a0 \'a0\'a0Payment date\'a0\'a0 :%d/%d/%d\\n\\n",customer.lastpayment.month,customer.lastpayment.day,customer.lastpayment.year);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 printf("\'a0\'a0\'a0 Account status :");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 textcolor(128+RED);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 switch(customer.acct_type)
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 \{
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 case 'C':
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0cprintf("CURRENT\\n\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0break;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 case 'O':
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0cprintf("OVERDUE\\n\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0break;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 case 'D':
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0cprintf("DELINQUENT\\n\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0break;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 default:
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0 \'a0cprintf("ERROR\\\\n\\n");
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 \}
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 textcolor(WHITE);
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0\'a0\'a0\'a0 return;
\fs32 \

\fs48 \'a0\'a0\'a0\'a0\'a0\'a0 \'a0\'a0 \}
\fs32 \
}